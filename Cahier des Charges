# OpenDoliConnect — Cahier des charges (v0.1)

**Projet :** Connecteur WordPress ↔ Dolibarr (gratuit & open‑source)
**Nom du plugin :** OpenDoliConnect
**Auteurs :** Asgard Hosting & Helptech Informatique
**Licence suggérée :** GPLv3
**Objectif :** Synchroniser données commerciales et logistiques entre WordPress (WooCommerce) et Dolibarr : produits, clients, commandes, factures, expéditions, stocks, avoirs, et échéanciers de paiement (module optionnel).

---

## 1) État des lieux — objets à connecter & périmètres

### 1.1 Produits & Catalogues

* **WooCommerce** : Produits simples/variables, attributs, catégories, tags, prix (HT/TTC), soldes, SKU, poids/dimensions, images, stock, statuts (publish/draft).
* **Dolibarr** : `Products/Services` (type 0/1), références (`ref`), `barcode`, `label`, `description`, `sellprice`, `tva_tx`, `weight`, `length/width/height`, `stock_warehouses`, images/documents, multi-prix (si module Prix Spéciaux), variantes (module `Variants`).
* **Mapping clé** : SKU WooCommerce ↔ `ref` Dolibarr (recommandé), avec stratégie de secours (mapping par EAN/UPC ou champ méta dédié).

### 1.2 Clients (B2C/B2B)

* **WooCommerce** : Utilisateurs/Clients, adresses facturation & livraison, champs B2B (SIRET, TVA intracom — via champs personnalisés), consentement RGPD.
* **Dolibarr** : Tiers (`societe`), Contacts/Adresses, prospect/client, numéro TVA, catégories, extrafields, multicompany (optionnel).
* **Mapping** : User ID WP ↔ `socid` Dolibarr stocké en méta utilisateur.

### 1.3 Commandes

* **WooCommerce** : `orders`, lignes produits, remises/coupons, frais de port, taxes, statuts (pending, processing, completed, cancelled, refunded…).
* **Dolibarr** : `Commande` client, lignes (`Commandedet`), remises globales/lignes, port, statuts (Brouillon, Validée, Expédiée, Facturée…).

### 1.4 Factures & Avoirs

* **WooCommerce** : Pas natif (selon extensions) mais données nécessaires dans la commande; remboursements/avoirs gérés via `refunds`.
* **Dolibarr** : `Facture` client, `Facturedet`, paiements partiels/échéanciers (avec module dédié), avoirs.

### 1.5 Expéditions & Suivis

* **WooCommerce** : Statuts, tracking (via plugins d’expédition), transporteurs.
* **Dolibarr** : `Expédition/Delivery`, transporteurs, tracking, documents PDF.

### 1.6 Stocks & Entrepôts

* **WooCommerce** : Stock global par produit/variation, seuils d’alerte.
* **Dolibarr** : Mouvement de stock par entrepôt, multi-entrepôts, inventaires, lots/séries (si module).

### 1.7 Taxes, devises, tarifs

* **Taxes** : Mapping TVA (pays, HT/TTC), règles de taxe WP ↔ taux Dolibarr.
* **Devises** : Euro par défaut; prévoir multi-devises (Dolibarr) & conversion.
* **Tarifs** : Pricelists Dolibarr ↔ rôles/segments WooCommerce (B2B, VIP…).

### 1.8 Paiements & Échéanciers

* **WooCommerce** : Gateways (CB, PayPal, Stripe…), statuts de paiement.
* **Dolibarr** : Paiements enregistrés, conditions/règlements, échéancier (via module **OpenDoliSchedule** — option à développer).

### 1.9 Documents

* Génération PDF (Dolibarr : commandes, factures, BL).
* Lien de téléchargement / stockage côté WP (métadonnées, URL sécurisée).

---

## 2) Architecture de connexion

### 2.1 Stratégie d’intégration

* **API REST Dolibarr** (token) comme source de vérité pour aspects compta/logistique.
* **Hooks & Webhooks WooCommerce** (création/maj de produits, commandes, remboursements).
* **Synchronisation bi‑directionnelle** configurable par type d’objet (ex : produits = Dolibarr → WooCommerce ; commandes = WooCommerce → Dolibarr).

### 2.2 Flux recommandés (par défaut)

* **Catalogues** : Dolibarr → WooCommerce (on pousse produits, prix, stock).
* **Clients** : WooCommerce → Dolibarr (création client lors 1ère commande) + option sync initiale.
* **Commandes** : WooCommerce → Dolibarr (création commande + lignes + taxes).
* **Factures** : Dolibarr génère facture (à validation commande) → retour numéro/URL dans WooCommerce.
* **Expéditions** : Dolibarr crée BL/expédition → statut/numéro de suivi renvoyé à WooCommerce.
* **Stocks** : Mouvement Dolibarr → update stock WooCommerce; option inverse si vente hors‑site.

### 2.3 Sécurité & Authentification

* Dolibarr : token API + IP allowlist (optionnel).
* WordPress : capabilities dédiées (`manage_opendoliconnect`), nonces, REST routes protégées.
* Chiffrement en transit (TLS), masquage logs, rotation des clés.

### 2.4 Robustesse

* **Idempotence** via clés de dé‑duplication (order\_id, invoice\_ref, shipment\_ref).
* **Reprise sur erreur** (file d’attente, retry expo).
* **Pagination & Rate‑limit** (batchs, backoff).
* **Journalisation** (logs structurés, niveaux, export JSON).
* **Tests** (unitaires, intégration, sandbox WP+Dolibarr via Docker compose).

---

## 3) Design fonctionnel — modules

### 3.1 Assistant d’onboarding

* Vérif prérequis (versions WP/PHP, WooCommerce actif, URL Dolibarr, token, modules nécessaires).
* Choix des flux (sens de sync) par objet.
* Test de connexion & import d’essai.

### 3.2 Synchronisation Produits

* Import initial & incrémental.
* Mapping champs : `ref`↔SKU, libellés, descriptions, prix (HT/TTC), TVA, poids/dim, images, catégories/attributs, variations (si module `Variants`).
* Options : masquer hors‑stock, ignorer services, multi-entrepôts (sélection entrepôt maître), pricelists.

### 3.3 Synchronisation Clients

* Création/maj Tiers + Contacts (adresses).
* Champs B2B : SIRET, TVA intracom, catégorie client.
* Politique de conflits (priorité site ou ERP).

### 3.4 Commandes → Dolibarr

* Création commande + lignes (références produits, quantités, remises, port, taxes).
* Mapping statuts (WP ↔ Dolibarr).
* Gestion coupons et codes promo (ligne remise).
* Avoirs/refunds : création avoir dans Dolibarr, synchro statut WP.

### 3.5 Facturation

* Option **auto‑facturation** à changement de statut (ex. « Processing » → Facture Brouillon).
* Validation facture selon événement (paiement capturé / commande complétée).
* Récupération PDF/numéro de facture dans WP (lien client admin).

### 3.6 Expéditions & Tracking

* Création BL/Expédition depuis Dolibarr (ou via événement WooCommerce).
* Remontée numéro de suivi & transporteur vers WooCommerce, mise à jour statut « Completed ».

### 3.7 Stocks

* Choix entrepôt source.
* Mouvement stock à la commande (réservation) ou à l’expédition (décrément).
* Sync périodique (CRON) + webhooks si disponibles.

### 3.8 Module optionnel : **OpenDoliSchedule** (Échéancier de paiement)

* **Côté Dolibarr** (module gratuit compagnon) :

  * Table `llx_opendoli_schedule` (liée facture) : n° échéance, date, montant, statut (à venir/payé/en retard), moyen de paiement, notes.
  * Génération d’échéancier depuis conditions de règlement (n échéances, périodicité).
  * API REST dédiée (lecture/écriture, marquage paiement partiel).
* **Côté WP** :

  * Vue admin dans la commande/facture : calendrier des échéances, état des paiements.
  * Hooks pour gateways (Stripe SEPA, virements) + rappels automatiques (emails WP) + mise à jour Dolibarr.
  * Option d’afficher au client (Mon compte) son échéancier & statut.

### 3.9 Outils & Maintenance

* Pages : **Tableau de bord**, **Files d’attente**, **Journal**, **Re‑sync** (sélectif), **Export/Import config**.
* Sanity checks (TVA absente, SKU manquant, produit supprimé…).

---

## 4) Mapping de données (extraits)

### 4.1 Produits (base)

| WooCommerce             | Dolibarr              | Notes                   |
| ----------------------- | --------------------- | ----------------------- |
| `sku`                   | `ref`                 | clé primaire sync       |
| `name`                  | `label`               |                         |
| `description`           | `description`         | HTML → texte/HTML       |
| `regular_price`         | `price`/`sellprice`   | gérer HT/TTC            |
| `tax_class`             | `tva_tx`              | mappage taux            |
| `weight`                | `weight`              | unités                  |
| `dimensions`            | `length/width/height` | unités                  |
| `stock_quantity`        | `stock_warehouse`     | entrepôt choisi         |
| `categories`            | catégories produit    | via extrafields ou tags |
| `attributes/variations` | module Variants       | optionnel               |

### 4.2 Client

| WooCommerce           | Dolibarr            |
| --------------------- | ------------------- |
| `user_id`             | `socid` (tiers)     |
| `billing_company`     | `nom`               |
| `billing_vat`         | `tva_intra`         |
| `billing_email`       | contact email       |
| `billing_phone`       | contact tel         |
| `billing_address...`  | adresse facturation |
| `shipping_address...` | adresse livraison   |

### 4.3 Commande → Dolibarr

| Composant   | Mapping                                        |
| ----------- | ---------------------------------------------- |
| Métadonnées | `ref_ext` = order\_id WP, date, devise         |
| Lignes      | `fk_product` (via ref), qty, PU HT/Remise, TVA |
| Port        | ligne de type service « Shipping »             |
| Remises     | ligne négative ou remise globale               |

---

## 5) Paramétrage & UI (WordPress)

* **Page Connexion** : URL Dolibarr, token, société (multicompany), entrepôt, mode HT/TTC, devise par défaut.
* **Schéma de sync** par objet (radio : « WP → Doli », « Doli → WP », « Bi‑dir », « Désactivé »).
* **Règles de taxes** (table de mapping).
* **Jobs CRON** (fréquences, limites batch).
* **Journal & files** (vue, filtrage, export).
* **Outils** : Reset mapping, resynchronisation ciblée, import initial assisté.

---

## 6) Technique — Stack & Qualité

* **Compatibilité** : WP 6.5+, WooCommerce 8/9+, PHP 8.1+, Dolibarr 17+ (cible), 16 min.
* **Structure plugin** :

  * `includes/Api/`, `includes/Sync/`, `includes/Mapper/`, `admin/`, `public/`.
  * Conteneur de services, filtres/Actions WP, WP‑CLI (`wp odc …`).
* **Sécurité WP** : capacités, nonces, escaping/sanitization, options en `wp_options` (autres sensibles en crypto).
* **Performances** : batch 50–200, transients cache, évitement N+1, pagination API.
* **i18n/l10n** : fr\_FR, en\_US.
* **CI/CD** : GitHub Actions (lint PHP-CS, PHPCS, PHPUnit), tests d’intégration Docker (WP+Doli).

---

## 7) Points d’attention (risques & cas limites)

* Variations complexes (attributs non alignés entre systèmes).
* TVA multi‑régions (DOM/TOM, UE/Non‑UE), mode prix HT vs TTC.
* Multi‑entrepôts & réservations vs déstockage réel.
* Avoirs partiels, remboursements multi‑items, frais non remboursés.
* Produits non gérables en stock (services).
* Délais & timeouts (gros catalogues).
* Données historiques (ne pas re‑facturer / re‑expédier).

---

## 8) Extensions futures / idées supplémentaires

* **Listes de prix B2B** (catégories clients Dolibarr ↔ rôles WP).
* **Bundles/kits** (produits composés Dolibarr ↔ bundles WooCommerce).
* **Lots / numéros de série** (traçabilité).
* **Téléchargements/virtuels** (licences, URLs).
* **Abonnements** (compat Stripe Subscriptions ↔ contrats Dolibarr).
* **Multi‑boutiques** (plusieurs sites WP vers un Dolibarr / inverse).
* **Webhooks Dolibarr** (si dispo) ou micro‑service « listener ».
* **Dashboard KPI** (ventes, ruptures, top clients, impayés).

---

## 9) MVP — Périmètre initial proposé

1. Connexion sécurisée + assistant onboarding.
2. Sync **Produits** (Dolibarr → WooCommerce) : base + images + stock (1 entrepôt).
3. Sync **Clients** (WooCommerce → Dolibarr) à la commande.
4. **Commandes** (WooCommerce → Dolibarr) avec taxes, remises, port.
5. **Factures** générées dans Dolibarr à validation + retour n° dans WP.
6. **Expéditions** (Dolibarr → WooCommerce) avec tracking.
7. Journal/Retry + CRON.

---

## 10) Roadmap indicative

* **Semaine 1–2** : scaffolding plugin, écran setup, client Dolibarr API, premiers tests.
* **Semaine 3–4** : mapping produits + import initial, gestion images, stocks.
* **Semaine 5–6** : clients & commandes, taxes/remises.
* **Semaine 7** : factures & PDF, expéditions, tracking.
* **Semaine 8** : logs, files d’attente, WP‑CLI, hardening, docs.
* **Phase 2** : Module échéancier OpenDoliSchedule + abonnements/avoirs.

---

## 11) Spécifications API (exemples)

* **Produits (GET Doli → WP)** : `/api/index.php/products?sortfield=t.rowid&sortorder=ASC&limit=100&mode=1`
* **Créer commande (WP → Doli)** : `POST /customerorders` payload : tiers, date, lignes (ref, qty, pu\_ht, tva), remise, port.
* **Facture** : `POST /invoices` puis `POST /invoices/{id}/validate` ; récupérer `ref` & URL PDF.
* **Expédition** : `POST /shipments` + tracking.
* **Stocks** : `GET /stock/products/{id}` ou `GET /products/{id}/stock` selon version; `POST /stockmovements`.
* **Échéancier** (module compagnon) : `GET/POST /opendoli/schedules` (custom).

*(Les routes exactes dépendront de la version Dolibarr ; prévoir adaptateurs et détection de version.)*

---

## 12) Structure des tables/métas côté WordPress

* `wp_postmeta` (produits) : `_odc_doli_id`, `_odc_stock_last_sync`, `_odc_hash`.
* `wp_usermeta` : `_odc_doli_socid`.
* `wp_options` : `odc_settings` (JSON chiffré partiel), `odc_cron_lastrun`.
* Tables internes plugin :

  * `wp_odc_jobs` (queue), `wp_odc_logs`, `wp_odc_maps` (correspondances), `wp_odc_schedules` (miroir lecture échéancier).

---

## 13) Qualité & Documentation

* **README** (installation, prérequis, limitations).
* **Guide d’admin** (captures d’écran).
* **Contributing** (issues, PR, roadmap).
* **Exemples Postman** & WP‑CLI.

---

## 14) Checklist de démarrage

* [ ] Créer repo GitHub `OpenDoliConnect` (GPLv3).
* [ ] Scaffolding WordPress (fichiers de base + autoloader).
* [ ] Client HTTP Dolibarr (gestion token, pagination, retry).
* [ ] Écran onboarding + tests de connectivité.
* [ ] MVP Produits (import) + Stocks (lecture).
* [ ] MVP Clients/Commandes → Dolibarr.
* [ ] Facturation & Expéditions.
* [ ] Logs/Queue + CRON.
* [ ] Doc & packaging .zip.

---

### Notes finales

* Respect RGPD (minimisation, consentement, droit d’accès/suppression).
* Veiller à la cohérence HT/TTC entre WP et Dolibarr.
* Prévoir un mode **sandbox** pour validation avant mise en prod.
